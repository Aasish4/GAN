# -*- coding: utf-8 -*-
"""face_extractor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sUWyxrkKKPiuBeoQp7bZ_mItPKK5Sza-

# Part1 : Detecting all the Faces from images
"""

# Import all the required dependencies
import cv2
import dlib
import argparse
import time
import os
import pandas as pd
import tqdm
from tqdm import tqdm

# Argument parser
ap = argparse.ArgumentParser()
ap.add_argument('-f', '--folder', required=True, help='path to the images folder' )
ap.add_argument('-w', '--weights', default='./mmod_human_face_detector.dat', help='path to weights file')
args = ap.parse_args()

path = args.folder
files_path = os.listdir(path)

sorted_files = sorted(files_path)

# Create a dataframe
columns = ['Name', 'path', 'coordinates']
df = pd.DataFrame(columns=columns)

df.head()

# Iterating over all the images to detect the faces
count=0
for i, file in tqdm(enumerate(sorted_files), total=len(sorted_files), desc='Processing..'):
    start = time.time()
    image_path = f'{path}/{file}'
    image = cv2.imread(image_path)

    if len(image) > 0:
      cnn_face_detector = dlib.cnn_face_detection_model_v1(args.weights)
      faces_cnn = cnn_face_detector(image)
    else:
      break

    for face in faces_cnn:
      
      x = face.rect.left()
      y = face.rect.top()
      w = face.rect.right() - x
      h = face.rect.bottom() - y
      coor = [x,y,x+w,y+h]
      df.loc[count,'Name'] = file
      df.loc[count, 'path'] = image_path
      df.loc[count, 'coordinates'] = coor
      
      count += 1


      
    end = time.time()
print('Total time: {}'.format(end-start)) 

# Converting the dataframe to csv file
df.to_csv('face_data.csv', index=False)

print('Sucessfully detected all the faces...')