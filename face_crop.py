# -*- coding: utf-8 -*-
"""face_crop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qAsTMTb_LoIJecwF4JTTWUF2oPsiVtRA

# Part 2: Extract the faces
"""

# import all the dependencies
import pandas as pd
import cv2
import os
import matplotlib.pyplot as plt
import argparse
from tqdm import tqdm

ap = argparse.ArgumentParser()
ap.add_argument('-i', '--input', default='./face_data.csv', help='input csv file')
ap.add_argument('-o', '--output', default='./cropped', help='output path for cropped images')
args = ap.parse_args()

# read the csv file
df = pd.read_csv('./face_data.csv')

# removing the brackets in coordinates column
df['coordinates'] = df['coordinates'].str.strip('[]')

# check if the directory exist
if not os.path.exists(args.output):
  os.mkdir('./cropped')
else:
  print('Folder already exist')

# iterate through the dataframe
for index, rows in tqdm(df.iterrows(), total=df.shape[0]):
  image_name = df.loc[index, 'Name']
  image_path = df.loc[index, 'path']
  img_coor = df.loc[index, 'coordinates']
  img = cv2.imread(image_path)
  if img is not None:

    dim = img_coor.split(',')
    xmin = max(0,int(dim[0])) # convert the str to int
    ymin = max(0,int(dim[1]))
    xmax = max(0,int(dim[2]))
    ymax = max(0,int(dim[3]))
    cropped = img[ymin:ymax, xmin:xmax]
    file_name = f'./cropped/{index}_{image_name}'
    cv2.imwrite(file_name, cropped)
  else:
    break
print('Sucessfully cropped all the images...')